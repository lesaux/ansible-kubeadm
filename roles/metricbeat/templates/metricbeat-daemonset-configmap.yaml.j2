---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-config
  namespace: kube-metricbeat
  labels:
    k8s-app: metricbeat
data:
  metricbeat.yml: |-
    setup.dashboards.enabled: true
    setup.kibana.host: kibana-logging.kube-elasticsearch.svc.cluster.local:5601
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false

    processors:
      - add_cloud_metadata:

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    output.elasticsearch:
      hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: metricbeat-daemonset-modules
  namespace: kube-metricbeat
  labels:
    k8s-app: metricbeat
data:
  system.yml: |-
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        - core
        - diskio
        - socket
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory

    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
  kubernetes.yml: |-
    - module: kubernetes
      enabled: true
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
      period: 10s
      hosts: ["https://${NODENAME}:10250"]
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      ssl.enabled: true
      ssl.verification_mode: none
      #ssl.certificate_authorities:
      #  - /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #ssl.certificate: "/etc/pki/client/cert.pem"
      #ssl.key: "/etc/pki/client/cert.key"
    - module: kubernetes
      enabled: true
      metricsets:
      - state_node
      - state_deployment
      - state_replicaset
      - state_statefulset
      - state_pod
      - state_container
      period: 10s
      hosts: ["kube-state-metrics.kube-system.svc.cluster.local:8080"]
      add_metadata: true
      in_cluster: true
    - module: kubernetes
      enabled: true
      metricsets:
      - event
    #- module: kubernetes
    #  enabled: true
    #  metricsets:
    #  - apiserver
    #  hosts: ["https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}"]
